C51 COMPILER V9.60.0.0   MAIN                                                              03/12/2025 14:04:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\main.c LARGE OMF2 OPTIMIZE(7,SPEED) BROWSE INCDIR(..\..\..\..\Library
                    -\Device\Include;..\..\..\..\Library\StdDriver\inc) DEBUG PRINT(.\LST\main.lst) TABS(2) OBJECT(.\Output\main.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2023 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          #include "numicro_8051.h"
   8          
   9          
  10          #define I2C_CLOCK                 14
  11          #define I2C_SLAVE_ADDRESS         0xA4
  12          #define I2C_WR                    0
  13          #define I2C_RD                    1
  14          
  15          #define LOOP_SIZE                 10
  16          
  17          BIT   i2cErrorFlag;
  18          
  19          #if defined __C51__
  20          void Timer0_ISR (void) interrupt 1        // Vector @  0x0B
  21          
  22          #elif defined __ICC8051__
              #pragma vector=0x33
              __interrupt void Pin_INT_ISR(void)
              
              #elif defined __SDCC__
              void Timer0_ISR (void) __interrupt (1)        // Vector @  0x0B
              #endif
  29          {
  30   1          SFRS_TMP = SFRS;              /* for SFRS page */
  31   1            SFRS = 0;
  32   1            i2cErrorFlag = 1;
  33   1            clr_TCON_TF0;
  34   1          if (SFRS_TMP)                 /* for SFRS page */
  35   1          {
  36   2            ENABLE_SFR_PAGE1;
  37   2          }
  38   1      }
  39          //========================================================================================================
  40          void Init_I2C(void)
  41          {
  42   1          P13_OPENDRAIN_MODE;          // Modify SCL pin to Open drain mode. don't forget the pull high resister
             - in circuit
  43   1          P14_OPENDRAIN_MODE;          // Modify SDA pin to Open drain mode. don't forget the pull high resister
             - in circuit
  44   1      
  45   1          P13_ST_ENABLE;               //Enable Schemitt trig mode
  46   1          P14_ST_ENABLE;
C51 COMPILER V9.60.0.0   MAIN                                                              03/12/2025 14:04:20 PAGE 2   

  47   1      
  48   1          /* Set I2C clock rate */
  49   1          I2CLK = I2C_CLOCK;
  50   1         /* Enable I2C time out divier as clock base is Fsys/4, the time out is about 4ms when Fsys = 16MHz */
  51   1          set_I2TOC_DIV;
  52   1          clr_I2TOC_I2TOF;
  53   1         /* Enable I2C intterupt for I2C time out */
  54   1          ENABLE_I2C_INTERRUPT;                               //enable I2C interrupt by setting IE1 bit 0
  55   1      
  56   1      
  57   1          /* Enable I2C */
  58   1          set_I2CON_I2CEN;
  59   1      }
  60          //========================================================================================================
  61          
  62          //--------------------------------------------------------------------------------------------
  63          //----  Page Write----------------------------------------------------------------------------
  64          //--------------------------------------------------------------------------------------------
  65          void I2C_Write_Process(uint8_t u8DAT)
  66          {
  67   1          uint8_t  u8Count;
  68   1      
  69   1          set_I2TOC_I2TOCEN;                           /* Enable I2C time out */
  70   1      
  71   1          /* Write Step1 */
  72   1          set_I2CON_STA;                              /* Send Start bit to I2C EEPROM */
  73   1          clr_I2CON_SI;
  74   1          while (!SI)                                /*Check SI set or not  */
  75   1          {
  76   2            if (i2cErrorFlag)
  77   2              goto I2CWRSTOP;
  78   2          }
  79   1          if (I2STAT != 0x08)                         /*Check status value after every step   */
  80   1          {
  81   2              i2cErrorFlag=1;
  82   2              goto I2CWRSTOP;
  83   2          }
  84   1          Timer0_ReloadCounter();
  85   1      
  86   1          /* Write Step2 */
  87   1          clr_I2CON_STA;                              /*STA=0*/
  88   1          I2DAT = (I2C_SLAVE_ADDRESS | I2C_WR);
  89   1          clr_I2CON_SI;
  90   1          while (!SI);                                /*Check SI set or not */
  91   1          if (I2STAT != 0x18)
  92   1          {
  93   2              i2cErrorFlag=1;
  94   2              goto I2CWRSTOP;
  95   2          }
  96   1          Timer0_ReloadCounter();
  97   1      
  98   1          /* Write Step3 */
  99   1          for (u8Count = 0; u8Count < LOOP_SIZE; u8Count++)
 100   1          {
 101   2              I2DAT = u8DAT;
 102   2              clr_I2CON_SI;
 103   2              while (!SI);                            /*Check SI set or not*/
 104   2              if (I2STAT != 0x28)
 105   2              {
 106   3                  i2cErrorFlag=1;
 107   3                  goto I2CWRSTOP;
 108   3              }
C51 COMPILER V9.60.0.0   MAIN                                                              03/12/2025 14:04:20 PAGE 3   

 109   2              u8DAT = ~u8DAT;
 110   2          }
 111   1          Timer0_ReloadCounter();
 112   1          /* Write Step4 */
 113   1          I2CWRSTOP:
 114   1          if  (i2cErrorFlag)
 115   1          {
 116   2            printf ("\n I2C write error !");
 117   2            i2cErrorFlag = 0;
 118   2          }
 119   1      
 120   1          set_I2CON_STO;
 121   1          clr_I2CON_SI;
 122   1          while (STO);                                /* Check STOP signal */
 123   1        }
 124            
 125          //--------------------------------------------------------------------------------------------
 126          //----  Page Read ----------------------------------------------------------------------------
 127          //--------------------------------------------------------------------------------------------
 128          void I2C_Read_Process(uint8_t u8DAT)
 129          {
 130   1          uint8_t  u8Count;
 131   1      
 132   1          Timer0_ReloadCounter();
 133   1          /* Read Step1 */
 134   1          set_I2CON_STA;
 135   1          clr_I2CON_SI;          
 136   1          while (!SI);                                //Check SI set or not
 137   1            {
 138   2              if (i2cErrorFlag)
 139   2              goto I2CRDSTOP;
 140   2            }
 141   1          if (I2STAT != 0x08)                         //Check status value after every step
 142   1          {
 143   2              i2cErrorFlag=1;
 144   2              goto I2CRDSTOP;
 145   2          }
 146   1          Timer0_ReloadCounter();
 147   1      
 148   1          /* Step13 */
 149   1          clr_I2CON_STA;                                    //STA needs to be cleared after START codition is ge
             -nerated
 150   1          I2DAT = (I2C_SLAVE_ADDRESS | I2C_RD);
 151   1          clr_I2CON_SI;
 152   1          while (!SI);                                //Check SI set or not
 153   1          if (I2STAT != 0x40)              
 154   1          {
 155   2              i2cErrorFlag=1;
 156   2              goto I2CRDSTOP;
 157   2          }
 158   1          Timer0_ReloadCounter();
 159   1      
 160   1          /* Step14 */
 161   1          for (u8Count = 0; u8Count <LOOP_SIZE; u8Count++)
 162   1          {
 163   2              set_I2CON_AA;
 164   2              clr_I2CON_SI;        
 165   2              while (!SI);                            //Check SI set or not
 166   2              if (I2STAT != 0x50)
 167   2              {
 168   3                  i2cErrorFlag=1;
 169   3                  goto I2CRDSTOP;
C51 COMPILER V9.60.0.0   MAIN                                                              03/12/2025 14:04:20 PAGE 4   

 170   3              }
 171   2              if (I2DAT != u8DAT)
 172   2              {
 173   3                  i2cErrorFlag=1;
 174   3                  goto I2CRDSTOP;
 175   3              }
 176   2              u8DAT = ~u8DAT;
 177   2          } 
 178   1          Timer0_ReloadCounter();
 179   1      
 180   1          /* Step15 */
 181   1          clr_I2CON_AA;
 182   1          clr_I2CON_SI;
 183   1          while (!SI);                                //Check SI set or not
 184   1          if (I2STAT != 0x58)
 185   1          {
 186   2              i2cErrorFlag=1;
 187   2              goto I2CRDSTOP;
 188   2          }
 189   1          Timer0_ReloadCounter();
 190   1      
 191   1          /* Step16 */
 192   1          I2CRDSTOP:
 193   1          while (STO);                                /* Check STOP signal */
 194   1          {
 195   2            printf ("\n I2C read error !");
 196   2            i2cErrorFlag = 0;
 197   2          }
 198   1          set_I2CON_STO;
 199   1          clr_I2CON_SI;
 200   1          while (STO);                                /* Check STOP signal */
 201   1      }
 202          //========================================================================================================
 203          void main(void)
 204          {
 205   1          /* UART0 settting for printf function */
 206   1          MODIFY_HIRC(HIRC_24);
 207   1          Enable_UART0_VCOM_printf_24M_115200();
 208   1          printf ("\n Test start ...");
 209   1      
 210   1          Init_I2C();                                 /* initial I2C circuit  */
 211   1          Timer0_AutoReload_Interrupt_Initial(24,30000); /* about 30ms time-out. Always clear counter in transmi
             -t */
 212   1          ENABLE_GLOBAL_INTERRUPT;
 213   1      
 214   1          I2C_Write_Process(0x55);                /* I2C Master will send 10 byte 0x55,0xAA,.... to slave */
 215   1          I2C_Read_Process(0x55);
 216   1      
 217   1          while (1);
 218   1      /* =================== */
 219   1      }
 220          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    485    ----
   CONSTANT SIZE    =     56    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
C51 COMPILER V9.60.0.0   MAIN                                                              03/12/2025 14:04:20 PAGE 5   

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
