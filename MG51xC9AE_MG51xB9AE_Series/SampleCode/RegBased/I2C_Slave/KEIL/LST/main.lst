C51 COMPILER V9.60.0.0   MAIN                                                              03/12/2025 14:04:24 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\main.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\..\Library
                    -\Device\Include;..\..\..\..\Library\StdDriver\inc) DEFINE(FOSC_160000) DEBUG PRINT(.\LST\main.lst) TABS(2) OBJECT(.\Outp
                    -ut\main.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2021 nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          #include "numicro_8051.h"
   7          
   8          
   9          #define I2C_SLAVE_ADDRESS         0xA0
  10          #define LOOP_SIZE                 10 
  11          
  12          #define SDA                       P14
  13          #define SCL                       P13
  14          
  15          uint8_t data_received[34], data_num = 0 ;
  16          uint16_t u16PageOffset_HB,u16ReadAddress;
  17          BIT I2CWOVERFLAG;
  18          
  19          /**
  20            * @brief     I2C interrupt vector.
  21            * @param[in] Vector 0x38 (6).
  22            * @return    None.
  23          */
  24          #if defined __C51__
  25          void I2C0_ISR(void) interrupt 6
  26          #elif defined __ICC8051__
              #pragma vector=0x33
              __interrupt void I2C_ISR(void)
              #elif defined __SDCC__
              void I2C0_ISR(void) __interrupt (6)
              #endif
  32          {
  33   1         SFRS_TMP = SFRS;              /* for SFRS page */
  34   1      
  35   1        SFRS = 0;
  36   1        switch (I2STAT)
  37   1          {
  38   2              case 0x00:
  39   2                  set_I2CON_STO;
  40   2                  while(STO);
  41   2              break;
  42   2      
  43   2              case 0x60:
  44   2                  set_I2CON_AA;
  45   2              break;
  46   2              
  47   2              case 0x68:
  48   2                  clr_I2CON_AA;
C51 COMPILER V9.60.0.0   MAIN                                                              03/12/2025 14:04:24 PAGE 2   

  49   2              break;
  50   2      
  51   2              case 0x80:
  52   2                  data_received[data_num] = I2DAT;
  53   2                  u16ReadAddress = (data_received[0]<<8) + data_received[1];  //This for read process
  54   2                  data_num++;
  55   2                  if (data_num == 32)   /* 2 byte address + 30 bytes Data */
  56   2                  {
  57   3                      clr_I2CON_AA;
  58   3                  }
  59   2                  else
  60   2                      set_I2CON_AA;
  61   2              break;
  62   2      
  63   2              case 0x88:
  64   2                  data_received[data_num] = I2DAT;
  65   2                  data_num = 0;
  66   2                  clr_I2CON_AA;
  67   2              break;
  68   2      
  69   2              case 0xA0:
  70   2      
  71   2                  if (data_num>20)
  72   2                  {
  73   3                     I2CWOVERFLAG = 1 ;
  74   3                  }
  75   2                  data_num =0;
  76   2                  set_I2CON_AA;
  77   2              break;
  78   2      
  79   2              case 0xA8:
  80   2      #if defined __C51__
  81   2                  I2DAT = Read_APROM_BYTE((uint16_t code *)(u16ReadAddress+data_num));
  82   2      #elif defined __ICC8051__
                          I2DAT = Read_APROM_BYTE((uint16_t __code*)(u16ReadAddress+data_num));
              #elif defined __SDCC__
                          I2DAT = Read_APROM_BYTE((uint16_t __code*)(u16ReadAddress+data_num));
              #endif
  87   2                  data_num++;
  88   2                  set_I2CON_AA;
  89   2              break;
  90   2      
  91   2              case 0xB8: 
  92   2      #if defined __C51__
  93   2                  I2DAT = Read_APROM_BYTE((uint16_t code *)(u16ReadAddress+data_num));
  94   2      #elif defined __ICC8051__
                          I2DAT = Read_APROM_BYTE((uint16_t __code*)(u16ReadAddress+data_num));
              #elif defined __SDCC__
                          I2DAT = Read_APROM_BYTE((uint16_t __code*)(u16ReadAddress+data_num));
              #endif
  99   2                  data_num++;
 100   2                  set_I2CON_AA;
 101   2              break;
 102   2      
 103   2              case 0xC0:
 104   2                  data_num = 0;
 105   2                  set_I2CON_AA;
 106   2              break; 
 107   2      
 108   2              case 0xC8:
 109   2                  set_I2CON_AA;
 110   2              break;
C51 COMPILER V9.60.0.0   MAIN                                                              03/12/2025 14:04:24 PAGE 3   

 111   2          }
 112   1      
 113   1          I2C0_SI_Check();
 114   1      
 115   1          if (SFRS_TMP)                 /* for SFRS page */
 116   1          {
 117   2            ENABLE_SFR_PAGE1;
 118   2          }
 119   1      }
 120          
 121          //========================================================================================================
 122          void Init_I2C_Slave_Interrupt(void)
 123          {
 124   1          P13_OPENDRAIN_MODE;          /* External pull high resister in circuit */
 125   1          P14_OPENDRAIN_MODE;          /* External pull high resister in circuit */
 126   1          set_P1S_3;                   /* Setting schmit tigger mode */
 127   1          set_P1S_4;                   /* Setting schmit tigger mode */
 128   1        
 129   1          SDA = 1;                     /* set SDA and SCL pins high */
 130   1          SCL = 1;
 131   1        
 132   1          I2C_Slave_Open(I2C_SLAVE_ADDRESS) ;
 133   1          I2C_Interrupt(ENABLE);
 134   1      }
 135          
 136          
 137          /******************************
 138            * @brief     Main loop.
 139            * @param[in] None.
 140            * @return    None.
 141          ******************************/
 142          void main(void)
 143          {
 144   1      
 145   1          MODIFY_HIRC(HIRC_24);
 146   1          Enable_UART0_VCOM_printf_24M_115200();
 147   1      
 148   1        /* Initial I2C function */
 149   1          I2CWOVERFLAG = 0;
 150   1          Init_I2C_Slave_Interrupt();                                 //initial I2C circuit
 151   1          EA =1;
 152   1      
 153   1          while (1)
 154   1          {
 155   2               if (I2CWOVERFLAG )
 156   2              {
 157   3                 /* After receive storage in dataflash */
 158   3                 u16PageOffset_HB =  (data_received[0]<<8) + data_received[1];
 159   3                 Write_DATAFLASH_ARRAY(u16PageOffset_HB, data_received+2, 32);
 160   3                 I2CWOVERFLAG = 0;
 161   3              }
 162   2           }
 163   1      
 164   1      }
 165          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    461    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     39    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   MAIN                                                              03/12/2025 14:04:24 PAGE 4   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
