C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2024 11:40:02 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\main.c LARGE OMF2 OPTIMIZE(7,SPEED) BROWSE INCDIR(..\..\..\..\Library
                    -\Device\Include;..\..\..\..\Library\StdDriver\inc) DEBUG PRINT(.\LST\main.lst) TABS(2) OBJECT(.\Output\main.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2024 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          #include "numicro_8051.h"
   8          
   9          /******************************************************************************
  10           * FUNCTION_PURPOSE: ADC interrupt Service Routine
  11           ******************************************************************************/
  12          #if defined __C51__
  13          void ADC_ISR (void) interrupt 11
  14          
  15          #elif defined __ICC8051__
              #pragma vector=0x5B
              __interrupt void ADC_ISR (void)
              
              #elif defined __SDCC__
              void ADC_ISR (void) __interrupt (11)
              #endif
  22          {
  23   1          SFRS_TMP = SFRS;              /* for SFRS page */
  24   1      
  25   1          clr_ADCCON0_ADCF;                       // Clear ADC interrupt flag
  26   1          GPIO_LED ^= 1;                          // Check the P3.0 toggle at falling edge of PWM
  27   1      
  28   1          if (SFRS_TMP)                 /* for SFRS page */
  29   1          {
  30   2            ENABLE_SFR_PAGE1;
  31   2          }
  32   1      }
  33          
  34          /******************************************************************************
  35          The main C function.  Program execution starts
  36          here after stack initialization.
  37          ******************************************************************************/
  38          void main (void) 
  39          {
  40   1      
  41   1          GPIO_LED_QUASI_MODE;
  42   1      /* Initial UART0 for printf */
  43   1          MODIFY_HIRC(HIRC_24);
  44   1          Enable_UART0_VCOM_printf_24M_115200();
  45   1          printf ("\n Test start ...");
  46   1      /*-------------------------------------------------
  47   1        ADC trig initial setting
  48   1        Please modify #if value to open diffent type
C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2024 11:40:02 PAGE 2   

  49   1      --------------------------------------------------*/
  50   1      #if 1
  51   1      // By PWM falling edge
  52   1          ENABLE_PWM0_CH0_P12_OUTPUT;
  53   1          ENABLE_ADC_AIN0;                            // Enable AIN0 P1.7 as ADC input
  54   1          PWM0_FALLINGEDGE_TRIG_ADC;  
  55   1      #endif    
  56   1      #if 0
              // By PWM rising edge
                  ENABLE_PWM0_CH0_P12_OUTPUT;
                  ENABLE_ADC_AIN0;                            // Enable AIN0 P1.7 as ADC input
                  PWM0_RISINGEDGE_TRIG_ADC;
              #endif    
  62   1      #if 0
              // By PWM central point
                  ENABLE_PWM0_CH0_P12_OUTPUT;
                  ENABLE_ADC_AIN0;                            // Enable AIN0 P1.7 as ADC input
                  PWM_CENTER_TYPE;
                  PWM0_CENTRAL_TRIG_ADC;  
              #endif  
  69   1      #if 0
              // By PWM end point
                  ENABLE_PWM0_P12_OUTPUT;
                  ENABLE_ADC_AIN0;                            // Enable AIN0 P1.7 as ADC input
                  PWM_CENTER_TYPE;
                  PWM0_END_TRIG_ADC;
              #endif  
  76   1        
  77   1      // Setting PWM value
  78   1          PWMPH = 0x07;                                //Setting PWM value          
  79   1          PWMPL = 0xFF;
  80   1          PWM0H = 0x02;
  81   1          PWM0L = 0xFF;
  82   1          set_PWMCON0_LOAD;                                    // PWM run
  83   1          set_PWMCON0_PWMRUN;
  84   1      // Setting ADC
  85   1          ENABLE_ADC_INTERRUPT;                                    // Enable ADC interrupt (if use interrupt)
  86   1          ENABLE_GLOBAL_INTERRUPT;  
  87   1          while(1);
  88   1      
  89   1      }
  90          
  91          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    179    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
