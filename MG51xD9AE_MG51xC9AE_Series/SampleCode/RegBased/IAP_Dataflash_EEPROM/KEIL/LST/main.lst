C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2024 11:41:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\main.c LARGE OMF2 OPTIMIZE(4,SPEED) BROWSE INCDIR(..\..\..\..\Library
                    -\Device\Include;..\..\..\..\Library\StdDriver\inc) DEBUG PRINT(.\LST\main.lst) TABS(2) OBJECT(.\Output\main.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2024 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          #include "numicro_8051.h"
   8          
   9          struct
  10          {
  11            unsigned int a;
  12            unsigned long b;
  13            unsigned char  c;
  14            
  15          }StructData;
  16          
  17          unsigned char ArrayData[50];
  18          unsigned char i;
  19          
  20          
  21          /******************************
  22            * @brief     Main loop.
  23            * @param[in] None.
  24            * @return    None.
  25          ******************************/
  26          void main (void) 
  27          {
  28   1          uint16_t system16highsite;
  29   1        
  30   1          MODIFY_HIRC(HIRC_24);
  31   1          Enable_UART0_VCOM_printf_24M_115200();
  32   1          printf ("\n\r Toggle P05 to low to start... \n\r");
  33   1      
  34   1          GPIO_LED_QUASI_MODE;
  35   1          while(GPIO_LED);
  36   1      
  37   1        /* Write one byte demo */ 
  38   1          if (Write_DATAFLASH_BYTE(0x3882,0x34)==0)
  39   1          {  
  40   2              printf ("\n\r  Dataflash R/W Byte pass \n\r");
  41   2          }
  42   1          else
  43   1          {
  44   2              printf ("\n\r write Dataflash error !!! \n\r");
  45   2          }
  46   1      
  47   1      
  48   1        /* Write array  demo */
C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2024 11:41:00 PAGE 2   

  49   1          for(i=0;i<50;i++)
  50   1          {
  51   2            ArrayData[i]=i;
  52   2          }
  53   1           StructData.a=0xA1A2;
  54   1           StructData.b=0xA3A4A5A6;
  55   1           StructData.c=0xA7;
  56   1      
  57   1          if (Write_DATAFLASH_ARRAY(0x38E0,ArrayData,50)==0)    //write 50 bytes
  58   1          {  
  59   2              printf ("\n\r  Dataflash R/W array pass \n\r");
  60   2          }
  61   1          else
  62   1          {
  63   2              printf ("\n\r write Dataflash error !!! \n\r");
  64   2          }
  65   1      
  66   1          if (Write_DATAFLASH_ARRAY(0x38FE,(unsigned char *)&StructData,sizeof(StructData))==0)//write structure
  67   1          {  
  68   2              printf ("\n\r  Dataflash R/W struct data pass \n\r");
  69   2          }
  70   1          else
  71   1          {
  72   2              printf ("\n\r write Dataflash  error !!! \n\r");
  73   2          }
  74   1      
  75   1        /* print result */
  76   1      #if defined __C51__
  77   1          system16highsite = (Read_APROM_BYTE(0x38FD)<<8);
  78   1          system16highsite |= Read_APROM_BYTE(0x38FE);
  79   1      
  80   1      #elif defined __ICC8051__
                  system16highsite = Read_APROM_BYTE((unsigned int __code *)0x38FD) << 8 ;
                  system16highsite |= Read_APROM_BYTE ((unsigned int __code *)0x38FE) ;
              
              #elif defined __SDCC__
                  system16highsite = ((Read_APROM_BYTE((uint16_t __code*)0x38FD)<<8)+Read_APROM_BYTE((uint16_t __code*)0
             -x38FE));
              #endif
  87   1      
  88   1          printf ("\n\r system16highsite = 0x%X", system16highsite);
  89   1      
  90   1        while(1);
  91   1      }
  92          
  93          
  94          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    268    ----
   CONSTANT SIZE    =    229    ----
   XDATA SIZE       =     58       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2024 11:41:00 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
