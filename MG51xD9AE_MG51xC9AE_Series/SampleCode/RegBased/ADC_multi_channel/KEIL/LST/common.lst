C51 COMPILER V9.60.0.0   COMMON                                                            06/25/2024 11:39:59 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE COMMON
OBJECT MODULE PLACED IN .\Output\common.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\..\..\Library\StdDriver\src\common.c LARGE OMF2 OPTIMIZE(8,SPEED) 
                    -BROWSE INCDIR(..\..\..\..\Library\Device\Include;..\..\..\..\Library\StdDriver\inc) DEFINE(FOSC_160000) DEBUG PRINT(.\LS
                    -T\common.lst) TABS(2) OBJECT(.\Output\common.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2024 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          #include "numicro_8051.h"
   8          
   9          BIT BIT_TMP;
  10          
  11          #if defined __C51__
  12          uint8_t data  TA_REG_TMP,BYTE_TMP,SFRS_TMP;
  13          
  14          #elif defined __ICC8051__
              uint8_t __data  TA_REG_TMP,BYTE_TMP,SFRS_TMP;
              
              #elif defined __SDCC__
              __data uint8_t TA_REG_TMP,BYTE_TMP,SFRS_TMP;
              #endif
  20          
  21          /**
  22           * @brief       Read Dataflash
  23           * @param       Dataflash start address
  24           * @return      Dataflash Value
  25           * @details     None
  26          **/
  27          #if defined __C51__
  28          uint8_t Read_APROM_BYTE(uint16_t code *u16_addr)
  29          
  30          #elif defined __ICC8051__
              uint8_t Read_APROM_BYTE(const uint16_t __code *u16_addr)
              
              #elif defined __SDCC__
              uint8_t Read_APROM_BYTE(const uint16_t __code *u16_addr)
              
              #endif
  37          {
  38   1          uint8_t rdata;
  39   1          rdata = *u16_addr >> 8;
  40   1          return rdata;
  41   1      }
  42          
  43          
  44          /**
  45           * @brief       Software reset API
  46           * @param       Run in APROM/LDROM after reset
  47           *                       - \ref BOOT_APROM: Run in APROM after reset .
C51 COMPILER V9.60.0.0   COMMON                                                            06/25/2024 11:39:59 PAGE 2   

  48           *                       - \ref BOOT_LDROM: Run in LDROM after reset.
  49           * @return      None
  50           * @details     None
  51           */
  52          void Software_Reset(uint8_t u8Bootarea)
  53          {
  54   1          uint8_t boottemp;
  55   1          boottemp = (0x80|u8Bootarea);
  56   1          TA = 0xAA;
  57   1          TA = 0x55;
  58   1          CHPCON = boottemp;                   //software reset enable
  59   1      }
  60          
  61          /**
  62           * @brief       MCU power down mode enable API
  63           * @param       Enable power down mode
  64           *                       - \ref ENABLE: Run into power down mode .
  65           * @return      None
  66           * @details     None
  67           */
  68          void PowerDown_Mode(uint8_t PDStatus)
  69          {
  70   1          if (PDStatus)
  71   1          {
  72   2             ENABLE_POWERDOWN_MODE;
  73   2             CALL_NOP;
  74   2             CALL_NOP;
  75   2          }
  76   1      }
  77          
  78          /**
  79           * @brief       MCU idle mode enable API
  80           * @param       Enable idle mode
  81           *                       - \ref ENABLE: Run into idle mode .
  82           * @return      None
  83           * @details     None
  84           */
  85          void Idle_Mode(uint8_t IdleStatus)
  86          {
  87   1          if (IdleStatus)
  88   1          {
  89   2             ENABLE_IDLE_MODE;
  90   2             CALL_NOP;
  91   2             CALL_NOP;
  92   2          }
  93   1      }
  94          
  95          
  96          /**
  97           * @brief       Software loop delay by HIRC, about 3ms
  98           * @param       None
  99           * @return      None
 100           * @details     None
 101           */
 102          void _delay_(void)
 103          {
 104   1          uint8_t t1,t2;
 105   1      
 106   1          for (t2=0;t2<0x1A;t2++)
 107   1          {
 108   2             for (t1=0;t1<0x7f;t1++)
 109   2             {
C51 COMPILER V9.60.0.0   COMMON                                                            06/25/2024 11:39:59 PAGE 3   

 110   3                CALL_NOP;
 111   3             }
 112   2          }
 113   1      }
 114          
 115          /**
 116           * @brief       Global Interrupt Status (EA)
 117           * @param       ENABLE / DISABLE
 118           * @return      None
 119           * @details     after all IP interrupt enable. Must enable gloabl interrupt.
 120           * @Example     Global_Interrupt(ENABLE);
 121           */
 122          void Global_Interrupt(uint8_t u8IntStatus)
 123          {
 124   1          EA = u8IntStatus;
 125   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     76    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
