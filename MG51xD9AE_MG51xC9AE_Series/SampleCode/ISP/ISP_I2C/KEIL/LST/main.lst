C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2024 11:39:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\main.c LARGE OMF2 OPTIMIZE(7,SPEED) BROWSE INCDIR(..\..\..\..\Library
                    -\Device\Include;..\..\..\..\Library\StdDriver\inc;..\include) DEBUG PRINT(.\LST\main.lst) TABS(2) OBJECT(.\Output\main.o
                    -bj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2024 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          #include "numicro_8051.h"
   8          #include "isp_i2c.h"
   9          
  10          //#define   isp_with_wdt   /* if enable WDT function. Uncomment this line  */
  11          
  12          
  13          /******************************
  14            * @brief     Main loop.
  15            * @param[in] None.
  16            * @return    None.
  17          ******************************/
  18          void main (void)
  19          {
  20   1          uint8_t   vo8temp;
  21   1          uint16_t  vo16temp;
  22   1          
  23   1          bI2CDataReady=0;
  24   1          set_CHPCON_IAPEN;
  25   1      
  26   1          Init_I2C(); 
  27   1      
  28   1          TM0_ini();  
  29   1          g_timer0Over=0;
  30   1          g_timer0Counter=5000;
  31   1      
  32   1        
  33   1          g_progarmflag=0;
  34   1      
  35   1      while(1)
  36   1      {
  37   2              //if(bUartDataReady == TRUE)
  38   2              if(bI2CDataReady == TRUE)
  39   2              {
  40   3                EA=0; /* Disable all interrupt */
  41   3                if(g_progarmflag==1)
  42   3                {
  43   4                  for(count=8;count<64;count++)
  44   4                  {
  45   5                    IAPCN = BYTE_PROGRAM_AP;          //program byte
  46   5                    IAPAL = flash_address&0xff;
  47   5                    IAPAH = (flash_address>>8)&0xff;
C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2024 11:39:27 PAGE 2   

  48   5                    IAPFD=rx_buf[count];
  49   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
  52   5                    trig_IAPGO;
  53   5      #endif
  54   5                
  55   5                    IAPCN = BYTE_READ_AP;              //program byte verify
  56   5                    set_IAPTRG_IAPGO;
  57   5                    vo8temp = rx_buf[count]; 
  58   5                    if(IAPFD!=vo8temp)
  59   5                    while(1);                          
  60   5                    if (CHPCON==0x43)              //if error flag set, program error stop ISP
  61   5                    while(1);
  62   5                    
  63   5                    g_totalchecksum += vo8temp;
  64   5                    flash_address++;
  65   5                    vo16temp = AP_size;
  66   5                    if(flash_address==vo16temp)
  67   5                    {
  68   6                      g_progarmflag=0;
  69   6              g_timer0Over =1;
  70   6                       goto END_2;          
  71   6                    }
  72   5                  } 
  73   4      END_2:                
  74   4                  Package_checksum();
  75   4                  tx_buf[8]=g_totalchecksum&0xff;
  76   4                  tx_buf[9]=(g_totalchecksum>>8)&0xff;
  77   4      
  78   4                  bISPDataReady = 1;
  79   4                }
  80   3                  
  81   3                switch(rx_buf[0])
  82   3                {                
  83   4                  case CMD_CONNECT:
  84   4                  case CMD_SYNC_PACKNO:
  85   4                  {
  86   5                    Package_checksum();
  87   5      
  88   5                    bISPDataReady = 1;              
  89   5                    g_timer0Counter=0; //clear timer 0 for no reset
  90   5                    g_timer0Over=0;
  91   5                  break;
  92   5                  }
  93   4                              
  94   4                  case CMD_GET_FWVER:            
  95   4                  {
  96   5                    Package_checksum();
  97   5                    tx_buf[8]=FW_VERSION;  
  98   5      
  99   5                    bISPDataReady = 1;
 100   5                  break;
 101   5                  }
 102   4                  
 103   4                  case CMD_RUN_APROM:
 104   4                  {
 105   5                    goto _APROM;
 106   5                  break;
 107   5                  }
 108   4          
 109   4                  //please for ISP programmer GUI, ID always use following rule to transmit.
C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2024 11:39:27 PAGE 3   

 110   4                  case CMD_GET_DEVICEID:            
 111   4                  {
 112   5                    READ_ID();
 113   5                    Package_checksum();
 114   5                    tx_buf[8]=DID_lowB;  
 115   5                    tx_buf[9]=DID_highB;  
 116   5                    tx_buf[10]=PID_lowB;  
 117   5                    tx_buf[11]=PID_highB;  
 118   5      
 119   5                    bISPDataReady = 1; 
 120   5                  break;
 121   5                  }
 122   4                  case CMD_ERASE_ALL:
 123   4                  {
 124   5                    set_CHPCON_IAPEN;
 125   5                    set_IAPUEN_APUEN;
 126   5                    IAPFD = 0xFF;          //Erase must set IAPFD = 0xFF
 127   5                    IAPCN = PAGE_ERASE_AP;
 128   5                    
 129   5                    for(flash_address=0x0000;flash_address<APROM_SIZE/PAGE_SIZE;flash_address++)
 130   5                    {        
 131   6                      IAPAL = LOBYTE(flash_address*PAGE_SIZE);
 132   6                      IAPAH = HIBYTE(flash_address*PAGE_SIZE);
 133   6      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 136   6                    trig_IAPGO;
 137   6      #endif
 138   6                    }
 139   5                    
 140   5                    Package_checksum();
 141   5                    bISPDataReady = 1; 
 142   5                    break;
 143   5                  }
 144   4                  case CMD_READ_CONFIG:
 145   4                  {
 146   5                    READ_CONFIG();
 147   5                    Package_checksum();
 148   5                    tx_buf[8]=CONF0;  
 149   5                    tx_buf[9]=CONF1;  
 150   5                    tx_buf[10]=CONF2;  
 151   5                    tx_buf[11]=0xff;  
 152   5                    tx_buf[12]=CONF4;  
 153   5                    tx_buf[13]=0xff;  
 154   5                    tx_buf[14]=0xff;
 155   5                    tx_buf[15]=0xff;
 156   5                    bISPDataReady = 1;
 157   5                  break;
 158   5                  }
 159   4                  
 160   4                  case CMD_UPDATE_CONFIG:
 161   4                  {
 162   5                    recv_CONF0 = rx_buf[8];
 163   5                    recv_CONF1 = rx_buf[9];
 164   5                    recv_CONF2 = rx_buf[10];
 165   5                    recv_CONF4 = rx_buf[12];
 166   5      /*Erase CONFIG */              
 167   5                    set_CHPCON_IAPEN;
 168   5                    set_IAPUEN_CFUEN;
 169   5                    IAPCN = PAGE_ERASE_CONFIG;
 170   5                    IAPAL = 0x00;
 171   5                    IAPAH = 0x00;
C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2024 11:39:27 PAGE 4   

 172   5                    IAPFD = 0xFF;
 173   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 176   5                    trig_IAPGO;
 177   5      #endif
 178   5      
 179   5      /*Program CONFIG*/  
 180   5                    IAPCN = BYTE_PROGRAM_CONFIG;
 181   5                    IAPFD = recv_CONF0;
 182   5                    set_IAPTRG_IAPGO;
 183   5                    IAPFD = recv_CONF1;
 184   5                    IAPAL = 0x01;
 185   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 188   5                    trig_IAPGO;
 189   5      #endif
 190   5                    IAPAL = 0x02;
 191   5                    IAPFD = recv_CONF2;
 192   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 195   5                    trig_IAPGO;
 196   5      #endif
 197   5                    IAPAL = 0x04;
 198   5                    IAPFD = recv_CONF4;
 199   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 202   5                    trig_IAPGO;
 203   5      #endif
 204   5                    clr_IAPUEN_CFUEN;
 205   5      /*Read new CONFIG*/  
 206   5                    READ_CONFIG();
 207   5                    
 208   5                    Package_checksum();
 209   5                    tx_buf[8]=CONF0;  
 210   5                    tx_buf[9]=CONF1;  
 211   5                    tx_buf[10]=CONF2;  
 212   5                    tx_buf[11]=0xff;  
 213   5                    tx_buf[12]=CONF4;  
 214   5                    tx_buf[13]=0xff;  
 215   5                    tx_buf[14]=0xff;
 216   5                    tx_buf[15]=0xff;
 217   5                    bISPDataReady = 1;
 218   5                    break;
 219   5                  }
 220   4                  
 221   4                  case CMD_UPDATE_APROM:
 222   4                  {
 223   5                    set_CHPCON_IAPEN;
 224   5                    set_IAPUEN_APUEN;
 225   5                    IAPFD = 0xFF;          //Erase must set IAPFD = 0xFF
 226   5                    IAPCN = PAGE_ERASE_AP;
 227   5      
 228   5                    for(flash_address=0x0000;flash_address<APROM_SIZE/PAGE_SIZE;flash_address++)
 229   5                    {        
 230   6                      IAPAL = LOBYTE(flash_address*PAGE_SIZE);
 231   6                      IAPAH = HIBYTE(flash_address*PAGE_SIZE);
 232   6      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2024 11:39:27 PAGE 5   

              #else
 235   6                    trig_IAPGO;
 236   6      #endif
 237   6                    }
 238   5      
 239   5                    g_totalchecksum=0;
 240   5                    flash_address=0;
 241   5                    AP_size=0;
 242   5                    AP_size=rx_buf[12];
 243   5                    vo8temp=rx_buf[13];
 244   5                    AP_size|=(vo8temp<<8);  
 245   5                    g_progarmflag=1;
 246   5      
 247   5                    for(count=16;count<64;count++)
 248   5                    {
 249   6                      IAPCN = BYTE_PROGRAM_AP;
 250   6                      IAPAL = flash_address&0xff;
 251   6                      IAPAH = (flash_address>>8)&0xff;
 252   6                      IAPFD=rx_buf[count];
 253   6                      clr_CHPCON_IAPFF;
 254   6      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 257   6                    trig_IAPGO;
 258   6      #endif
 259   6            
 260   6                      IAPCN = BYTE_READ_AP;                //program byte verify
 261   6                      set_IAPTRG_IAPGO;
 262   6                      vo8temp = rx_buf[count];
 263   6                      if(IAPFD!=vo8temp)
 264   6                      while(1);
 265   6                      if (CHPCON==0x43)                //if error flag set, program error stop ISP
 266   6                      while(1);
 267   6                      
 268   6                      g_totalchecksum+=vo8temp;
 269   6                      flash_address++;
 270   6                      vo16temp = AP_size;
 271   6                      if(flash_address==vo16temp)
 272   6                      {
 273   7                        g_progarmflag=0;
 274   7                         goto END_1;
 275   7                      }
 276   6                    }
 277   5      END_1:                
 278   5                    Package_checksum();
 279   5                    tx_buf[8]=g_totalchecksum&0xff;
 280   5                    tx_buf[9]=(g_totalchecksum>>8)&0xff;
 281   5      
 282   5                    bISPDataReady = 1;
 283   5                    break;
 284   5                  }
 285   4                }  
 286   3                bI2CDataReady = FALSE;
 287   3                EA=1;
 288   3            }
 289   2            //For connect timer out  
 290   2            if(g_timer0Over==1)
 291   2            {       
 292   3             goto _APROM;
 293   3            }
 294   2      }   
 295   1      
C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2024 11:39:27 PAGE 6   

 296   1      
 297   1      _APROM:
 298   1          EA = 0;
 299   1          clr_CHPCON_IAPEN;
 300   1          TA = 0xAA;
 301   1          TA = 0x55;
 302   1          CHPCON = 0x00;                  //set boot from AP
 303   1          TA = 0xAA;
 304   1          TA = 0x55;
 305   1          CHPCON = 0x80;                   //software reset enable
 306   1      
 307   1          /* Trap the CPU */
 308   1          while(1);  
 309   1      }
 310          
 311          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1130    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
