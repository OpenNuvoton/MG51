C51 COMPILER V9.60.0.0   UART                                                              10/07/2024 11:23:11 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Output\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\..\..\Library\StdDriver\src\uart.c LARGE OMF2 OPTIMIZE(7,SPEED) BR
                    -OWSE INCDIR(..\..\..\..\Library\Device\Include;..\..\..\..\Library\StdDriver\inc) DEBUG PRINT(.\lst\uart.lst) TABS(2) OB
                    -JECT(.\Output\uart.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2024 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          #include "numicro_8051.h"
   8          
   9          BIT PRINTFG, uart0_receive_flag, uart1_receive_flag;
  10          uint8_t uart0_receive_data, uart1_receive_data;
  11          
  12          #if 0
              /* UART0 interrupt vector demo */
              #if defined __C51__
              void Serial_ISR(void)  interrupt 4
              #elif defined __ICC8051__
              #pragma vector=0x23
              __interrupt void SerialPort0_ISR(void)
              #elif defined __SDCC__
              void Serial_ISR(void) __interrupt (4)
              #endif
              {
                  PUSH_SFRS;
                  if (RI)
                  {
                      uart0_receive_flag = 1;
                      uart0_receive_data = SBUF;
                      clr_SCON_RI;                                         // Clear RI (Receive Interrupt).
                  }
              
                  if (TI)
                  {
                      if (!PRINTFG)
                      {
                          TI = 0;
                      }
                  }
                  POP_SFRS;
              }  
              
              
              /* UART1 interrupt vector demo */
              #if defined __C51__
              void SerialPort1_ISR(void) interrupt 15
              #elif defined __ICC8051__
              #pragma vector=0x7B
              __interrupt void SerialPort1_ISR(void)
C51 COMPILER V9.60.0.0   UART                                                              10/07/2024 11:23:11 PAGE 2   

              #elif defined __SDCC__
              void SerialPort1_ISR(void) __interrupt (15)
              #endif
              {
                  PUSH_SFRS;
              
                  if (RI_1 == 1)
                  {
                      clr_SCON_1_RI_1;                             /* clear reception flag for next reception */
                      uart1_receive_data = SBUF_1;
                      uart1_receive_flag = 1;
                  }
              
                  if (TI_1 == 1)
                  {
                      if (!PRINTFG)
                      {
                          clr_SCON_1_TI_1;                             /* if emission occur */
                      }
                  }
                  POP_SFRS;
              }  
              #endif 
  71          
  72          
  73          /**
  74          * @brief This API configures UART send byte
  75          * @param[in] u32SysClock. The system clock speed.
  76          * @param[in] u8UARTPort . Valid values as Fsys clock:
  77          *                       - \ref UART0_Timer1
  78          *                       - \ref UART0_Timer3
  79          *                       - \ref UART1
  80          * @param[in] u32Baudrate. UART baud rate setting
  81          *                       - \ref 115200 
  82          * @note      None.
  83          * @exmaple : UART_Open(24000000, UART0_Timer1, 115200);
  84          */
  85          
  86          void UART_Open(uint32_t u32SysClock, uint8_t u8UARTPort, uint32_t u32Baudrate)
  87          {
  88   1           SFRS = 0;
  89   1           switch (u8UARTPort)
  90   1          {
  91   2              case UART0_Timer1:
  92   2                  SCON = 0x50;            //UART0 Mode1,REN=1,TI=1
  93   2                  TMOD |= 0x20;           //Timer1 Mode1
  94   2                  set_PCON_SMOD;          //UART0 Double Rate Enable
  95   2                  set_CKCON_T1M;
  96   2                  clr_T3CON_BRCK;          //Serial port 0 baud rate clock source = Timer1
  97   2                  TH1 = 256 - (u32SysClock / 16 / u32Baudrate);
  98   2                  set_TCON_TR1;
  99   2                  set_IE_ES;
 100   2                  break;
 101   2      
 102   2              case UART0_Timer3:
 103   2                  SCON = 0x50;          //UART0 Mode1,REN=1,TI=1
 104   2                  set_PCON_SMOD;        //UART0 Double Rate Enable
 105   2                  T3CON &= 0xF8;        //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
 106   2                  set_T3CON_BRCK;        //UART0 baud rate clock source = Timer3
 107   2                  RH3    = HIBYTE(65536 - (u32SysClock / 16 / u32Baudrate));
 108   2                  RL3    = LOBYTE(65536 - (u32SysClock / 16 / u32Baudrate));
 109   2                  set_T3CON_TR3;         //Trigger Timer3
C51 COMPILER V9.60.0.0   UART                                                              10/07/2024 11:23:11 PAGE 3   

 110   2                  set_IE_ES;
 111   2                  break;
 112   2      
 113   2              case UART1_Timer3:
 114   2                  SCON_1 = 0x50;          //UART1 Mode1,REN_1=1,TI_1=1
 115   2                  T3CON = 0x80;           //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1
 116   2                  RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));  
 117   2                  RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));     
 118   2                  set_T3CON_TR3;             //Trigger Timer3
 119   2                  set_EIE1_ES_1;
 120   2                  break;
 121   2          }
 122   1       }
 123          
 124          uint8_t Receive_Data(uint8_t UARTPort)
 125          {
 126   1          uint8_t c;
 127   1      
 128   1          c = 0;
 129   1          SFRS = 0;
 130   1          switch (UARTPort)
 131   1          {
 132   2              case UART0:
 133   2                  while (!RI);
 134   2                  c = SBUF;
 135   2                  RI = 0;
 136   2                  break;
 137   2      
 138   2              case UART1:
 139   2                  while (!RI_1);
 140   2                  c = SBUF_1;
 141   2                  RI_1 = 0;
 142   2                  break;
 143   2          }
 144   1      
 145   1          return (c);
 146   1      }
 147          
 148            /**
 149            * @brief This API configures UART send byte 
 150            * @param[in] UARTPort . Valid values as Fsys clock:
 151            *                       - \ref UART0
 152            *                       - \ref UART1
 153            * @param[in] c . UART send HEX value
 154            *                       - \ref 0x55 
 155            * @note      None.
 156            * @exmaple : UART_Send_Data(UART0, 0x55);
 157            */
 158          void UART_Send_Data(uint8_t UARTPort, uint8_t c)
 159          {
 160   1          switch (UARTPort)
 161   1          {
 162   2            case UART0:
 163   2            DISABLE_UART0_INTERRUPT;
 164   2              SBUF = c;
 165   2              while(!TI);
 166   2              TI=0;
 167   2          ENABLE_UART0_INTERRUPT;
 168   2            break;
 169   2            case UART1:
 170   2            DISABLE_UART1_INTERRUPT;
 171   2              SBUF_1 = c;
C51 COMPILER V9.60.0.0   UART                                                              10/07/2024 11:23:11 PAGE 4   

 172   2              while(!TI_1);
 173   2              TI_1=0;
 174   2          ENABLE_UART1_INTERRUPT;
 175   2          ENABLE_GLOBAL_INTERRUPT;
 176   2            break;
 177   2          }
 178   1      }
 179          
 180          
 181          void Enable_UART0_VCOM_printf_24M_115200(void)
 182          {
 183   1          P06_QUASI_MODE;
 184   1          UART_Open(24000000,UART0_Timer1,115200);
 185   1          ENABLE_UART0_PRINTF;
 186   1          DISABLE_UART0_INTERRUPT;
 187   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    494    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
